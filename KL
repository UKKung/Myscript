local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Window = Rayfield:CreateWindow({
	Name = "King legacy",
	LoadingTitle = "King legacy",
	LoadingSubtitle = "by Yu HUB",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "sirius", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		FileName = "SiriusKey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "Hello"
	}
})
local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Section Example")

local Toggle = Tab:CreateToggle({
	Name = "random fruit",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	  _G.randomfruit = Value	-- The function that takes place when the toggle is pressed
    		-- The variable (Value) is a boolean on whether the toggle is true or false
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "safe mode",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	  _G.safemode = Value	-- The function that takes place when the toggle is pressed
    	  _G.partspawn = Value	-- The variable (Value) is a boolean on whether the toggle is true or false
	end,
})

local Button = Tab:CreateButton({
	Name = "safe mode manul",
	Callback = function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5.498901844024658, 100.5561684370040894, 104.15746307373047)	-- The function that takes place when the button is pressed
	end,
})

local Button = Tab:CreateButton({
	Name = "saa",
	Callback = function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5.498901844024658, 10.5561684370040894, 104.15746307373047)	-- The function that takes place when the button is pressed
	end,
})

local Button = Tab:CreateButton({
	Name = "devil awake",
	Callback = function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4429.35693359375, 81.4077377319336, 2120.946533203125)	-- The function that takes place when the button is pressed
	end,
})


spawn(function()
    while wait() do
        if _G.randomfruit then
            wait (0.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4783.2177734375, 57.44779586791992, 76.89634704589844)
            wait (0.5)
            game:GetService("ReplicatedStorage").Remotes.Functions.CheckQuest:InvokeServer(workspace.AllNPC.ARandomFruit)
            wait (0.5)
        end
    end
end)

spawn(function()
    while wait() do
        if _G.safemode then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5.498901844024658, 450.5561684370040894, 104.15746307373047)
        end
    end
end)



do
    local NM = game:GetService("Workspace"):FindFirstChild("Noclip")
    if NM then
        NM:Destroy()
    end    
end
local Noclip = Instance.new("Part",workspace)
     Noclip.Name = "Noclip"
     Noclip.CanCollide = true
     Noclip.Anchored = true
     Noclip.Transparency = 0.9
     Noclip.Size = Vector3.new(30,-5,30)
     Noclip.Rotation = Vector3.new(0,0,0)
function partspawn()
game:GetService("Workspace"):FindFirstChild("Noclip").CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-3, 0)    
end
